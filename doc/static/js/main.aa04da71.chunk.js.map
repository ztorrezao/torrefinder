{"version":3,"sources":["styles/colors.ts","styles/fonts.ts","components/Header/styles.ts","assets/logo.svg","components/Header/index.tsx","pages/JobSearch/styles.ts","components/Search/styles.ts","components/Search/index.tsx","components/JobResults/styles.ts","components/JobResult/styles.ts","components/JobResult/index.tsx","components/JobDescription/styles.ts","assets/header.svg","components/JobDescription/index.tsx","components/JobResults/index.tsx","pages/JobSearch/index.tsx","styles/global.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","colors","light","success","primary","gray","mediumDarkGray","darkGray","black","fonts","xs","s","md","lg","xl","HeaderContainer","styled","div","Navigation","nav","Header","setConfiguration","containerWidths","align","justify","className","src","logo","alt","href","size","JobSearchContainer","section","SearchContainer","Search","props","placeholder","handleSearch","color","onClick","JobResultsContainer","ResultContainer","JobResult","job","handleOnJobClick","objective","type","organizations","locations","compensation","picture","name","data","currency","minAmount","code","maxAmount","periodicity","DescriptionContainer","JobDescription","skills","style","backgroundImage","header","title","disabled","map","location","JobResults","results","useState","jobData","setJobData","clickedJob","gutterWidth","sm","index","id","Object","keys","length","constructor","JobSearch","setResults","page","text","fetch","method","headers","then","response","json","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa04da71.chunk.js","sourcesContent":["const colors = {\r\n  light: '#E5E5E5',\r\n  success: '#70BC41',\r\n  primary: '#CDDC39',\r\n  gray: '#9C9CA9',\r\n  mediumDarkGray: '#474B52',\r\n  darkGray: '#27292D',\r\n  black: '#0E0F10',\r\n};\r\n\r\nexport const lightenDarkenColor = (col: string, amt: number) => {\r\n  let usePound = false;\r\n\r\n  if (col[0] === '#') {\r\n    col = col.slice(1);\r\n    usePound = true;\r\n  }\r\n\r\n  const num = parseInt(col, 16);\r\n\r\n  let r = (num >> 16) + amt;\r\n\r\n  if (r > 255) r = 255;\r\n  else if (r < 0) r = 0;\r\n\r\n  let b = ((num >> 8) & 0x00ff) + amt;\r\n\r\n  if (b > 255) b = 255;\r\n  else if (b < 0) b = 0;\r\n\r\n  let g = (num & 0x0000ff) + amt;\r\n\r\n  if (g > 255) g = 255;\r\n  else if (g < 0) g = 0;\r\n\r\n  return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\r\n};\r\n\r\nexport default colors;\r\n","const fonts = {\r\n  xs: \"9px\",\r\n  s: \"12px\",\r\n  md: \"15px\",\r\n  lg: \"18px\",\r\n  xl: \"24px\",\r\n};\r\n\r\nexport default fonts;","import styled from 'styled-components';\r\nimport { colors, fonts } from '../../styles';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 60px;\r\n  background-color: ${colors.darkGray};\r\n  width: 100vw;\r\n\r\n  & .header-row {\r\n    height: 60px;\r\n  }\r\n\r\n  & .logo {\r\n    width: 86.64px;\r\n    height: 37.76px;\r\n  }\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  a {\r\n    display: inline-flex;\r\n    padding: 18px 30px;\r\n    text-decoration: none;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${colors.light};\r\n\r\n    & .icon {\r\n      margin-right: 9px;\r\n    }\r\n\r\n    &.active,  &:hover{\r\n      color: ${colors.primary};\r\n      position: relative;\r\n\r\n      &::after {\r\n        content: '';\r\n        width: 100%;\r\n        height: 3px;\r\n        background-color: ${colors.primary};\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a8c9dee4.svg\";","import React from 'react';\r\nimport { HeaderContainer, Navigation } from './styles';\r\nimport { Container, Row, Col, setConfiguration } from 'react-grid-system';\r\nimport { IoBriefcase, IoPeople } from \"react-icons/io5\";\r\nimport logo from '../../assets/logo.svg';\r\n\r\nfunction Header() {\r\n  setConfiguration({ containerWidths: [540, 740, 960, 1186, 1540] });\r\n  return (\r\n    <HeaderContainer>\r\n      <Container>\r\n        <Row align='center' justify='between' className='header-row'>\r\n          <img src={logo} className='logo' alt='Torrefinder' />\r\n\r\n          <Navigation>\r\n            <a className=\"active\" href='#'><IoBriefcase className=\"icon\" size={18} /> Job search</a>\r\n            {/* <a href='#'><IoPeople size={18}  className=\"icon\" /> People search</a> */}\r\n          </Navigation>\r\n        </Row>\r\n      </Container>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { colors, fonts } from '../../styles';\r\n\r\nexport const JobSearchContainer = styled.section`\r\n  width: 100vw;\r\n\r\n  & h1.title{\r\n    text-align: center;\r\n    padding-bottom: 60px;\r\n    color: ${colors.primary};\r\n  }\r\n\r\n  & p.label {\r\n    padding-top: 3px;\r\n    color: ${colors.mediumDarkGray};\r\n    font-size: ${fonts.s};\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport { colors, fonts, lightenDarkenColor } from '../../styles';\r\n\r\nexport const SearchContainer = styled.div`\r\n  background-color: ${colors.darkGray};\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  padding: 6px 6px 6px 15px;\r\n  max-height: 63px;\r\n  align-items: center;\r\n  border-radius: 9px;\r\n\r\n  .icon {\r\n    background-color: ${colors.mediumDarkGray};\r\n  }\r\n\r\n  input {\r\n    padding: 15px;\r\n    background-color: ${colors.darkGray};\r\n    border: none;\r\n    font-family: 'Ubuntu';\r\n    font-size: ${fonts.lg};\r\n    color: ${colors.light};\r\n    width: 100%;\r\n\r\n  }\r\n\r\n  button {\r\n    padding: 15px 63px;\r\n    color: ${colors.black};\r\n    background-color: ${colors.primary};\r\n    font-size: ${fonts.lg};\r\n    border-radius: 9px;\r\n\r\n    \r\n    &:hover {\r\n      background-color: ${lightenDarkenColor(colors.primary, -30)};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { SearchContainer } from './styles';\r\nimport { Container, Row, Col, setConfiguration } from 'react-grid-system';\r\nimport { IoSearch } from 'react-icons/io5';\r\nimport logo from '../../assets/logo.svg';\r\nimport { colors } from '../../styles';\r\n\r\n\r\nfunction Search(props: any) {\r\n  setConfiguration({ containerWidths: [540, 740, 960, 1186, 1540] });\r\n  const {placeholder, handleSearch} = props;\r\n\r\n  return (\r\n    <SearchContainer>\r\n      <IoSearch size={24} color={colors.mediumDarkGray} />\r\n      <input placeholder={placeholder}/>\r\n      <button onClick={()=> handleSearch()}>Search</button>\r\n    </SearchContainer>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import styled from 'styled-components';\r\nimport { colors, fonts, lightenDarkenColor } from '../../styles';\r\n\r\nexport const JobResultsContainer = styled.section`\r\n  margin-top: 30px;\r\n\r\n  .job-list,\r\n  .job-description {\r\n    overflow-y: scroll;\r\n    height: 462px;\r\n\r\n    /* scrollbar */\r\n    ::-webkit-scrollbar {\r\n      width: 6px;\r\n\r\n      &-track {\r\n        border-radius: 6px;\r\n        background-color: ${lightenDarkenColor(colors.gray, 60)};\r\n      }\r\n\r\n      &-thumb {\r\n        border-radius: 6px;\r\n        background-color: ${colors.gray};\r\n\r\n        &:hover {\r\n          background-color: ${lightenDarkenColor(colors.gray, -30)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { colors, fonts, lightenDarkenColor } from '../../styles';\r\n\r\nexport const ResultContainer = styled.div`\r\n  background-color: ${colors.darkGray};\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  padding: 18px;\r\n  border-radius: 9px;\r\n  transition: all .3s ease-in-out;\r\n  border: 1px solid ${colors.mediumDarkGray};\r\n  margin-bottom: 18px;\r\n\r\n\r\n\r\n\r\n  &:hover {\r\n    border: 1px solid ${colors.primary};\r\n    cursor: pointer;\r\n  }\r\n\r\n  .image {\r\n    width: 45px;\r\n    height: 45px;\r\n    max-width: 45px;\r\n    max-height: 45px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .description {\r\n    display: flex;\r\n    flex-direction:row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-left: 15px;\r\n  }\r\n\r\n  .rates {\r\n    text-align: center;\r\n  }\r\n\r\n  h6 {\r\n    font-family: 'Ubuntu';\r\n    font-weight: bold;\r\n    font-size: ${fonts.md};\r\n    color: ${colors.primary};\r\n    margin-bottom: 12px;\r\n\r\n  }\r\n\r\n  p {\r\n    font-family: Ubuntu;\r\n    font-size: ${fonts.s};\r\n    color: ${colors.gray};\r\n    margin-bottom: 6px;\r\n\r\n    & span.strong {\r\n      font-weight: bold;\r\n      font-size: ${fonts.md};\r\n      color: ${colors.light};\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { ResultContainer } from './styles';\r\nimport { IoSearch } from 'react-icons/io5';\r\nimport { colors } from '../../styles';\r\n\r\nfunction JobResult({job, handleOnJobClick}: any) {\r\n  const {objective, type, organizations, locations, compensation} = job;\r\n\r\n\r\n  return (\r\n    <ResultContainer onClick={() => handleOnJobClick(job)}>\r\n      <div>\r\n        <img src={organizations[0].picture} alt={organizations[0].name} className='image' />\r\n      </div>\r\n      <div className='description'>\r\n        <div className='info'>\r\n          <h6>{objective}</h6>\r\n          <p>{type}</p>\r\n          <p>\r\n            <strong>{organizations[0].name}</strong>\r\n          </p>\r\n          <p>{locations[0]}</p>\r\n          <p>\r\n            {compensation.data.currency} <span className='strong'>{compensation.data.minAmount} {compensation.data.code === 'range'? '-' : ''} {compensation.data.maxAmount}</span> /{compensation.data.periodicity}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </ResultContainer>\r\n  );\r\n}\r\n\r\nexport default JobResult;\r\n","import styled from 'styled-components';\r\nimport { colors, fonts, lightenDarkenColor } from '../../styles';\r\n\r\nexport const DescriptionContainer = styled.div`\r\n  background-color: ${colors.darkGray};\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border-radius: 9px;\r\n  transition: all 0.3s ease-in-out;\r\n  border: 1px solid ${colors.mediumDarkGray};\r\n  padding-bottom: 30px;\r\n  overflow: hidden;\r\n\r\n  .header {\r\n    width: 100%;\r\n    height: 161px;\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  .company {\r\n    margin-top: 6px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 15px;\r\n\r\n    p {\r\n      font-size: ${fonts.md};\r\n      color: ${colors.light};\r\n      font-family: 'Ubuntu';\r\n      margin-left: 12px;\r\n    }\r\n\r\n    .image {\r\n      width: 69px;\r\n      height: 69px;\r\n      max-width: 69px;\r\n    max-height: 69px;\r\n      border-radius: 50%;\r\n      overflow: hidden;\r\n      margin-top: -45px;\r\n      border: 3px solid ${colors.primary};\r\n      background-color: ${colors.black};\r\n    }\r\n  }\r\n\r\n  .content {\r\n    padding: 0 30px;\r\n    width: 100%;\r\n  }\r\n\r\n  .title {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 12px;\r\n\r\n    h4 {\r\n      font-size: ${fonts.lg};\r\n      color: ${colors.primary};\r\n    }\r\n\r\n    button {\r\n      padding: 12px 18px;\r\n      display: flex;\r\n      align-items: center;\r\n      min-width: 123px;\r\n\r\n    }\r\n  }\r\n\r\n  .condition {\r\n    font-size: ${fonts.md};\r\n    color: ${colors.light};\r\n    font-family: 'Ubuntu';\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  .rates {\r\n    text-align: center;\r\n  }\r\n\r\n  .description {\r\n    color: ${colors.light};\r\n  }\r\n\r\n  .skills {\r\n    li {\r\n      list-style: none;\r\n      display: inline;\r\n      margin-right: 12px;\r\n      font-size: ${fonts.s};\r\n      padding: 6px 12px;\r\n      background-color: ${colors.mediumDarkGray};\r\n      color: ${colors.light};\r\n      border-radius: 30px;\r\n    }\r\n  }\r\n\r\n  h6 {\r\n    font-family: 'Ubuntu';\r\n    font-weight: bold;\r\n    font-size: ${fonts.md};\r\n    color: ${colors.primary};\r\n    margin-top: 24px;\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  p {\r\n    font-family: Ubuntu;\r\n    font-size: ${fonts.s};\r\n    color: ${colors.gray};\r\n    margin-bottom: 6px;\r\n\r\n    & span.strong {\r\n      font-weight: bold;\r\n      font-size: ${fonts.md};\r\n      color: ${colors.light};\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/header.13088dac.svg\";","import React from 'react';\r\nimport { DescriptionContainer } from './styles';\r\nimport { IoFlash } from 'react-icons/io5';\r\nimport { colors } from '../../styles';\r\nimport header from '../../assets/header.svg';\r\n\r\nfunction JobDescription({ job }: any) {\r\n  const { skills, objective, type, organizations, locations, compensation } =\r\n    job;\r\n\r\n  return (\r\n    <DescriptionContainer>\r\n      <div\r\n        className='header'\r\n        style={{ backgroundImage: `url(${header})` }}\r\n      ></div>\r\n\r\n      <div className='content'>\r\n        <div className='company'>\r\n          <img\r\n            src={organizations[0].picture}\r\n            alt={organizations[0].name}\r\n            className='image'\r\n          />\r\n          <p>\r\n            <strong>{organizations[0].name}</strong>\r\n          </p>\r\n        </div>\r\n\r\n        <div className='title'>\r\n          <h4>{objective}</h4>\r\n          <button title='Coming soon' disabled>\r\n            <IoFlash /> Quick-apply\r\n          </button>\r\n        </div>\r\n\r\n        <p className='condition'>{type}</p>\r\n\r\n        <p>{locations.map((location: any) => `${location},`)}</p>\r\n\r\n        <h6>Compensation</h6>\r\n        <p>\r\n          {compensation.data.currency}{' '}\r\n          <span className='strong'>\r\n            {compensation.data.minAmount}{' '}\r\n            {compensation.data.code === 'range' ? '-' : ''}{' '}\r\n            {compensation.data.maxAmount}\r\n          </span>{' '}\r\n          /{compensation.data.periodicity}\r\n        </p>\r\n\r\n        {/* <h6>Skills and experience needed</h6>\r\n        <ul className='skills'>\r\n          {Array.isArray(skills) ? (\r\n            skills.map((skill: any, index: any) => <li key={index}>{skill}</li>)\r\n          ) : (\r\n            <li>{skills.name}</li>\r\n          )}\r\n        </ul> */}\r\n\r\n        {/* <h6>Description</h6>\r\n        <p className='description'>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab fugiat,\r\n          iure cupiditate quos dolores similique.\r\n        </p> */}\r\n      </div>\r\n    </DescriptionContainer>\r\n  );\r\n}\r\n\r\nexport default JobDescription;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { JobResultsContainer } from './styles';\r\nimport { Container, Row, Col, setConfiguration } from 'react-grid-system';\r\nimport Search from '../../components/Search';\r\nimport JobResult from '../JobResult';\r\nimport JobDescription from '../JobDescription';\r\n\r\nfunction JobResults({ results }: any) {\r\n  setConfiguration({ containerWidths: [540, 740, 960, 1186, 1540] });\r\n  const [jobData, setJobData] = useState({});\r\n\r\n  const handleOnJobClick = (clickedJob: any) => {\r\n    setJobData(clickedJob);\r\n  };\r\n  return (\r\n    <JobResultsContainer>\r\n      <Row>\r\n        <p></p>\r\n      </Row>\r\n      <Row gutterWidth={21}>\r\n        <Col sm={12} lg={5} className='job-list'>\r\n          {results.map((job: any, index: number) => (\r\n            <JobResult\r\n              key={job.id}\r\n              job={job}\r\n              handleOnJobClick={handleOnJobClick}\r\n            />\r\n          ))}\r\n        </Col>\r\n        <Col sm={12} lg={7} className='job-description'>\r\n          {Object.keys(jobData).length === 0 &&\r\n          jobData.constructor === Object ? (\r\n            ''\r\n          ) : (\r\n            <JobDescription job={jobData} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </JobResultsContainer>\r\n  );\r\n}\r\n\r\nexport default JobResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { JobSearchContainer } from './styles';\r\nimport { Container, Row, Col, setConfiguration } from 'react-grid-system';\r\nimport Search from '../../components/Search';\r\nimport JobResults from '../../components/JobResults';\r\n\r\nfunction JobSearch() {\r\n  const [results, setResults] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleSearch = (text: string) => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n    fetch(\r\n      `https://search.torre.co/opportunities/_search/?offset=${page}&size=10&aggregate=${text}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setResults(data.results));\r\n  };\r\n\r\n  setConfiguration({ containerWidths: [540, 740, 960, 1186, 1540] });\r\n  return (\r\n    <JobSearchContainer>\r\n      <Container>\r\n        {results.length === 0 ? (\r\n          <Row>\r\n            <Col>\r\n              <h1 className='title hide'>\r\n                Find the best working opportunity for your!\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <Search\r\n              placeholder='Type the position that you are searching for...'\r\n              handleSearch={handleSearch}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {results.length > 0 ? (\r\n        <Container>\r\n          {' '}\r\n          <JobResults results={results} />{' '}\r\n        </Container>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </JobSearchContainer>\r\n  );\r\n}\r\n\r\nexport default JobSearch;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\nimport { colors, fonts, lightenDarkenColor } from \".\";\r\n\r\nexport default createGlobalStyle`\r\n  /* importing roboto font-family */\r\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap');\r\n\r\n  /* reseting browser defaults */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  /* setting default containers */\r\n  body {\r\n    overflow: hidden;\r\n  }\r\n\r\n  #root {\r\n    background-color: ${colors.black};\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    overflow: hidden;\r\n    height: 100vh; \r\n  }\r\n\r\n  /* fonts */\r\n  body {\r\n    font-family: \"Ubuntu\", sans-serif;\r\n    font-size: ${fonts.md};\r\n    color: ${colors.light};\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  button {\r\n    color: ${colors.black};\r\n    background-color: ${colors.primary};\r\n    font-family: 'Ubuntu';\r\n    border: none;\r\n    border-radius: 9px;\r\n    transition: all .3s ease-in-out;\r\n\r\n    &:hover {\r\n      background-color: ${lightenDarkenColor(colors.primary, -9)};\r\n      cursor: pointer;\r\n    }\r\n    \r\n  }\r\n\r\n  h1 {\r\n    font-size: ${fonts.xl};\r\n  }\r\n\r\n  h2 {\r\n    font-size: ${fonts.lg};\r\n  }\r\n  \r\n  h3 {\r\n    font-size: ${fonts.md};\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    transition: color .3s ease-in-out;\r\n  }\r\n\r\n  /* scrollbar */\r\n  /* ::-webkit-scrollbar { \r\n    width: 6px;\r\n\r\n    &-track {\r\n      border-radius: 6px;\r\n      background-color: ${lightenDarkenColor(colors.gray, 60)};\r\n    }\r\n\r\n    &-thumb {\r\n      border-radius: 6px;\r\n      background-color: ${colors.gray};\r\n\r\n      &:hover {\r\n        background-color: ${lightenDarkenColor(colors.gray, -30)};\r\n      }\r\n    }\r\n  } */\r\n`;","import React from 'react';\nimport Header from './components/Header';\nimport JobSearch from './pages/JobSearch';\nimport GlobalStyle from \"./styles/global\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <JobSearch />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}